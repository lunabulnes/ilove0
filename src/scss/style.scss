$chromaticAberrationColor1: red;
$chromaticAberrationColor2: blue;
$chromaticAberrationColor3: green;
$fontColor: white;
$flickerBackgroundColor: rgb(80, 80, 80);

body {
    background: black;
    font-family: Arial, Helvetica, sans-serif;
    text-shadow: 1px 1px 0px $chromaticAberrationColor1, -1px -1px 0px $chromaticAberrationColor3;
}

.cosmetic {
    pointer-events: none;
}

.full-screen {
    position:absolute;
    height: 85vh;
    width: 100%;
    top: 0;
    left: 0;
}

#switch {
    display: none;
}

container {
    height: 90vh;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

.crt-overlay {
    z-index: 1000;
    opacity: 0;

    &::after {
        content: "";
        position: inherit;
        height: inherit;
        width: inherit;
        top: inherit;
        left: inherit;
        pointer-events: inherit;

        background: transparentize($color: $flickerBackgroundColor, $amount: 0.9);
        opacity: 0;
        animation: flicker 0.15s infinite;
    }

    &::before {
        content: "";
        position: inherit;
        height: inherit;
        width: inherit;
        top: inherit;
        left: inherit;
        pointer-events: inherit;

        background: linear-gradient(transparentize($flickerBackgroundColor, 1) 50%, transparentize(darken($flickerBackgroundColor, 10), 0.6) 50%), linear-gradient(90deg, transparentize(red, 0.94), transparentize(green, 0.98), transparentize(blue, 0.94));
        background-size: 100% 2px, 3px 100%;
    }
}

#switch:checked ~ screen > .crt-overlay {
    opacity: 1;
}

.title {
    color: $fontColor;
    position: relative;
    font-size: 10rem;
    text-shadow: 3px 3px 3px $chromaticAberrationColor1, 1px -3px 3px $chromaticAberrationColor2, -3px 0px 3px $chromaticAberrationColor3;
}

#switch:checked ~ container > .title {
    animation: chromaticMove 4s ease infinite, glitchSkew 5s 5s infinite, glitchMove 7s infinite, glitchCrop 11s infinite;
}

p {
    color: $fontColor;
    opacity: 0.3;
    font-size: 1.5rem;
    font-style: italic;
}

.crt-animation {
    background: white;
    opacity: 0;
}

#switch:checked ~ screen > .crt-animation {
    animation: turn-on-screen 4s linear;
    animation-fill-mode: forwards;
}

#switch ~ screen > .crt-animation {
    animation: turn-off 200ms linear;
    animation-fill-mode: forwards;
}

.crt-message {
    color: white;
    position: absolute;
    right: 2rem;
    top: 2rem;
    font-size: 60px;
    visibility: hidden;
}

#switch:checked ~ screen > .crt-message {
    animation: screen-message-animation 5s linear;
    animation-fill-mode: forwards;
}

@keyframes chromaticMove {
    0% {
        text-shadow: 3px 3px 3px $chromaticAberrationColor1, 0px -2px 3px $chromaticAberrationColor2, 0px 0px -3px $chromaticAberrationColor3;
    }
    50% {
        text-shadow: 3px 3px 1px $chromaticAberrationColor1, 0px -3px 3px $chromaticAberrationColor2, -3px 2px 3px $chromaticAberrationColor3;
    }
    75% {
        text-shadow: -2px 1px 0px $chromaticAberrationColor1, 0px 1px 3px $chromaticAberrationColor2, 3px -2px 3px $chromaticAberrationColor3;
    }
    100% {
        text-shadow: 3px 3px 2px $chromaticAberrationColor1, 1px -3px 3px $chromaticAberrationColor2, -3px 0px 3px $chromaticAberrationColor3;
    }
}

@keyframes glitchSkew {
    1%{
        transform: rotateX(10deg) skewX(90deg);
    }
    2%{
        transform: rotateX(0deg) skewX(0deg);
    }
}

@keyframes glitchMove {
    35% {
        top: 0;
        left: 0;
    }
    35.1% {
        top: -2rem;
        left: -10rem;
    }
    35.5% {
        top: 5rem;
        left: 10rem;    
    }
    36% {
        top: 0;
        left: 0;
    }
}

@keyframes glitchCrop {
    13% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    }
    13.5% {
        clip-path: polygon(0 0, 0 44%, 100% 9%);
    }
    14% {
        clip-path: polygon(0 47%, 0 68%, 100% 68%);
    }
    14.5% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    }
}

@keyframes flicker {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            opacity: random();
        }
    }
}

@keyframes turn-on-screen {
    0% {
        clip-path: polygon(0 20%, 100% 20%, 100% 80%, 0 80%);
        opacity: 1;
    }
    3.5% {
        clip-path: polygon(0 40%, 100% 40%, 100% 100%, 0 100%);
        opacity: 0;
    }
    3.6% {
        clip-path: polygon(0 0, 100% 0, 100% 60%, 0 60%);
        opacity: 1;
    }
    3.7% {
        clip-path: polygon(0 40%, 100% 40%, 100% 60%, 0 60%);
        opacity: 0.5;
    }
    9% {
        opacity: 0;
    }
    11% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
        opacity: 0.2;
    }
    50% {
        opacity: 0;
    }
}

@keyframes turn-off {
    0% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
        opacity: 0.3
    }
    60% {
        clip-path: polygon(0 40%, 100% 40%, 100% 60%, 0 60%);
        opacity: 0.5
    }
    80% {
        clip-path: polygon(0 48%, 100% 48%, 100% 52%, 0 52%);
        opacity: 1;

    }
    99.9% {
        clip-path: polygon(0 50%, 100% 50%, 100% 50.5%, 0 50.5%);
    }
    100% {
        opacity: 0;
    }
}

@keyframes screen-message-animation {
    0% {
        visibility: hidden;
    }
    20% {
        visibility: hidden;
    }
    21% {
        visibility: visible;
    }
    100% {
        visibility: hidden;
    }
}

.rocker {
    display: inline-block;
    position: absolute;
    bottom: 0;
    font-size: 2em;
    font-weight: bold;
    text-align: center;
    width: 7em;
    height: 4em;
    overflow: hidden;
    border-bottom: 0.5em solid white;

    &::before {
        content: " ";
        position: absolute;
        top: 1em;
        left: 0;
        right: 0;
        bottom: 0;
        background: grey;
        border: 0.5em solid white;
        border-bottom: 0;
    }

    input {
        display: none;
    }
}

.rocker-left, .rocker-right {
    cursor: pointer;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-shadow: none;
    height: 2.5em;
    width: 3em;
    transition: 0.2s;
}

.rocker-left::before, .rocker-right::before {
    content: "";
    position: absolute;
    width: 0.4em;
    height: 2.45em;
    bottom: -0.45em;
    background: rgb(148, 147, 147);
    transform: skewY(-65deg);
    transition: 0.2s;
}

.rocker-left {
    height: 2.4em;
    width: 2.75em;
    left: 0.85em;
    bottom: 0.4em;
    background: rgb(165, 165, 165);
    color: grey;
    transform: rotate(15deg) skewX(15deg);
}

.rocker-left::before {
    left: -0.4em;
}

.rocker-right {
    right: 0.5em;
    bottom: 0;
    background: red;
}

.rocker-right::before {
    width: 0;
    right: 0;
    transform: skewY(65deg);
}

#switch:checked ~ .rocker > .rocker-left {
    background-color: green;
    color: white;
    bottom: 0;
    left: 0.5em;
    height: 2.5em;
    width: 3em;
    transform: rotate(0deg) skewX(0deg);
}

#switch:checked ~ .rocker > .rocker-left:before {
    left: 0em;
    width: 0;
}

#switch:checked ~ .rocker > .rocker-right {
    height: 2.4em;
    width: 2.75em;
    right: 0.85em;
    bottom: 0.4em;
    background: rgb(165, 165, 165);
    color: grey;
    transform: rotate(-15deg) skewX(-15deg);
}

#switch:checked ~ .rocker > .rocker-right:before {
    width: 0.4em;
    right: -0.375em;
    background: rgb(148, 147, 147);
}